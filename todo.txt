

DATABASE:
    - SQL(MYSQL)
    Tables:
        1) daily_logs
            i) fields: routine_date_id(auto generated,PK), date(NOT NULL), routine_id;
            ii) PK --> routine_date_id
            iii) FK --> routine_id(FK from routines) 

        2) routines
            i) fields: routine_id(auto gen),routine_name,type;
            ii) PK --> routine_id
            iii) FK --> NONE

        3) routine_date_exercises 
            i) fields: r_d_e_id(AUTO GEN, routine_date_id(FK), routine_exercise_id(FK), sets, reps, weight;
            ii) PK --> r_d_e_id
            iii) FK --> routine_date_id(FK from r_d_id daily_logs), routine_exercise_id(FK from r_e_id from routine_exercises)

        4) routine_exercises
            i) fields: routine_exercise_id(AUTO_GEN), routineID(FK), exerciseID(FK), defaultSets, defaultReps
            ii) PK --> routine_exercise_id
            iii) FK --> routineID(FK from workout_routines), exerciseID(FK from exercises)
        5) exercises
            i) fields: exercise_id(AUTO GEN), name, defaultSets, defaultReps
            ii) PK --> exercise_id
            iii) FK --> NONE

        ^^ rewrite sql file


BACKEND
    
    1) figure out routes:
       // i) get all workout_routines w/ exercises
        //ii) get specific logs, or recent 3
        iii) create new workout_routines w/ exercises - drag and drop/pick and choose type
                -- add new exercises
        //iv) add new logs
         -- if log exists for the same date, not allowed (both by DB and backend)
         -- edit an existing log?
        
        v) edit existing routines

        vi) add login authentication

    2)

     REST API

     GraphQL


FRONTEND
    1) grid image for routines -- pop up into Tables
    
    put both in accordian?:
        2) get log by date, pick from big calendar, popup when date clicked
        3) accordian for n logs requested